DECLARE DYNAMIC LIBRARY "kernel32"
    FUNCTION GetLastError~& () 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx
    FUNCTION GetVersionExA& (BYVAL lpVersionInfo AS _UNSIGNED _OFFSET) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms724451(v=vs.85).aspx
END DECLARE
DECLARE DYNAMIC LIBRARY "user32"
    SUB GetCursorPos (BYVAL lpPoint AS _OFFSET) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms648390(v=vs.85).aspx
    SUB GetLastInputInfo (BYVAL plii AS _OFFSET) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms646302(v=vs.85).aspx
    FUNCTION GetDesktopWindow%& () 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms633504(v=vs.85).aspx
    FUNCTION GetForegroundWindow%& () 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms633505(v=vs.85).aspx
    FUNCTION GetKeyState% (BYVAL nVirtKey AS LONG) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms646301(v=vs.85).aspx
    FUNCTION GetSystemMetrics (BYVAL nIndex AS _UNSIGNED LONG) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms724385(v=vs.85).aspx
    FUNCTION OpenInputDesktop%& (BYVAL dwFlags AS _OFFSET, BYVAL fInherit AS _OFFSET, BYVAL dwDesiredAccess AS _OFFSET) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms684309(v=vs.85).aspx
    FUNCTION SetThreadDesktop%& (BYVAL hDesktop AS _OFFSET) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms686250(v=vs.85).aspx
    FUNCTION SystemParametersInfoW& (BYVAL uiAction AS _UNSIGNED LONG, BYVAL uiParam AS _UNSIGNED LONG, BYVAL pvParam AS _OFFSET, BYVAL fWinlni AS _UNSIGNED LONG) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx
END DECLARE
DECLARE CUSTOMTYPE LIBRARY
    FUNCTION FindWindow& (BYVAL ClassName AS _OFFSET, WindowName AS STRING) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms633499(v=vs.85).aspx
END DECLARE
DECLARE LIBRARY
    FUNCTION GetAsyncKeyState (BYVAL vkey AS _UNSIGNED LONG) 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms646293(v=vs.85).aspx
END DECLARE

'$INCLUDE:'common_init.bi'
'$INCLUDE:'database_init.bi'
'$INCLUDE:'input_init.bi'

Programname = "untitled"
Version = 0.01










REDIM SHARED freebase_searchresults(1 TO 5, 0) AS STRING



DIM SHARED apikey AS STRING
'apikey = "AIzaSyA5TJ8Fi91Cy_yzDd270t-Vub-Cz-dIxqg"



DIM query AS STRING
DIM topicname AS STRING
DIM category AS STRING
DIM id AS STRING
DIM description AS STRING
DIM qsave AS STRING

d = 0
p = 0

DO
    DO
        _LIMIT 32
        n = n + 1
        GETINPUT


        CLS
        COLOR ctorgb(15)
        PRINT query
        FOR x = 1 TO 5
            IF x > UBOUND(freebase_searchresults, 2) THEN EXIT FOR
            IF d = x THEN
                COLOR ctorgb(15)
            ELSE
                COLOR ctorgb(7)
            END IF
            LOCATE x + 2
            PRINT freebase_searchresults(1, x)
            COLOR ctorgb(8)
            LOCATE x + 2, 40
            PRINT freebase_searchresults(3, x)
        NEXT x
        IF p > 0 THEN
            COLOR ctorgb(15)
            LOCATE 9
            PRINT "Name:        "; topicname
            PRINT "Category:    "; category
            PRINT "ID:          "; id
            PRINT "Description: "; description
        END IF
        _DISPLAY


        IF CHAR > 0 THEN query = query + CHR$(CHAR)
        IF BSP THEN
            query = LEFT$(query, LEN(query) - 1)
            DO
            LOOP UNTIL NOT BSP
        END IF
        IF RTN THEN
            IF d > 0 THEN
                query = freebase_searchresults(1, d)
                d = 0
                GOSUB suggest
            ELSE
                topicname = query
                category = freebase_searchresults(3, 1)
                id = freebase_searchresults(2, 1)
                json$ = TopicFreebase(id + "?filter=/common/topic/article")
                fbt = dbParseJSON(json$, "Freebase Topic Results")
                g = 0
                g = dbTypeFind(fbt, 0, "property")
                g = dbTypeFind(0, g, "/common/topic/article")
                g = dbTypeFind(0, g, "values")
                g = dbTypeFind(0, g, "0001")
                g = dbTypeFind(0, g, "property")
                g = dbTypeFind(0, g, "/common/document/text")
                g = dbTypeFind(0, g, "values")
                g = dbTypeFind(0, g, "0001")
                g = dbPropertyFind(0, g, "value")
                description = dbPropertyValue(g)
                p = 1
            END IF
            DO
            LOOP UNTIL NOT RTN
        END IF

        IF DKEY(DKEY_UP) THEN
            d = d - 1
            DO
            LOOP UNTIL NOT DKEY(DKEY_UP)
        END IF
        IF DKEY(DKEY_DOWN) THEN
            d = d + 1
            DO
            LOOP UNTIL NOT DKEY(DKEY_DOWN)
        END IF
        IF d < 0 THEN d = 0
        IF d > UBOUND(freebase_searchresults, 2) THEN d = UBOUND(freebase_searchresults, 2)
        IF d > 5 THEN d = 5

        IF n MOD 32 = 0 THEN
            IF query <> qsave THEN GOSUB suggest
            qsave = query
        END IF
    LOOP UNTIL ESC

LOOP UNTIL ESC
GOSUB cleanup
SYSTEM



suggest:
json$ = SearchFreebase(query, 5)
fbs = dbParseJSON(json$, "Freebase Search Results")
SearchFreebase_GetSearchResults fbs
RETURN








checkhotkeys:
IF Hotkeys.help = TRUE THEN
    IF TIMER < Hotkeys.help_clock THEN Hotkeys.help_clock = 0
    IF TIMER - HOTKEYWAIT >= Hotkeys.help_clock THEN
        Hotkeys.help_clock = TIMER
        GOSUB help
    END IF
    Hotkeys.help = FALSE
END IF
IF Hotkeys.close = TRUE THEN
    IF TIMER < Hotkeys.close_clock THEN Hotkeys.close_clock = 0
    IF TIMER - HOTKEYWAIT >= Hotkeys.close_clock THEN
        Hotkeys.close_clock = TIMER
        GOSUB cleanup
    END IF
    Hotkeys.close = FALSE
END IF
IF Hotkeys.screenshot = TRUE THEN
    IF TIMER < Hotkeys.screenshot_clock THEN Hotkeys.screenshot_clock = 0
    IF TIMER - HOTKEYWAIT >= Hotkeys.screenshot_clock THEN
        Hotkeys.screenshot_clock = TIMER
        SCREENSHOT SCREENSHOT_MONITOR, Ssloc, ""
    END IF
    Hotkeys.screenshot = FALSE
END IF
IF Hotkeys.windowshot = TRUE THEN
    IF TIMER < Hotkeys.windowshot_clock THEN Hotkeys.windowshot_clock = 0
    IF TIMER - HOTKEYWAIT >= Hotkeys.windowshot_clock THEN
        Hotkeys.windowshot_clock = TIMER
        SCREENSHOT SCREENSHOT_WINDOW, Ssloc, ""
    END IF
    Hotkeys.screenshot = FALSE
END IF
IF Hotkeys.fullscreen = TRUE THEN
    IF TIMER < Hotkeys.fullscreen_clock THEN Hotkeys.fullscreen_clock = 0
    IF TIMER - HOTKEYWAIT >= Hotkeys.fullscreen_clock THEN
        Hotkeys.fullscreen_clock = TIMER
        FULLSCREEN
    END IF
    Hotkeys.fullscreen = FALSE
END IF
RETURN

cleanup:
CLOSE #32766
CLOSE #32767
CLOSE
CLEAR
SYSTEM
RETURN


help:
RETURN

sierr:
IF ERR = 70 THEN SYSTEM
GOTO sierrpass

errorhandler:
DIM printerror AS _BIT
DIM checkerror AS INTEGER
DIM errorcount AS INTEGER
DIM errornum AS INTEGER
errornum = ERR
printerror = TRUE
FOR checkerror = 1 TO UBOUND(errors)
    IF errors(checkerror).err = errornum AND errors(checkerror).line = _ERRORLINE THEN
        errors(checkerror).count = errors(checkerror).count + 1
        printerror = FALSE
        EXIT FOR
    END IF
NEXT checkerror
IF printerror THEN
    errorcount = UBOUND(errors) + 1
    PRINT #32766, TSTAMP; " - "; Module$; " - "; TRIMnum$(errornum); " ("; TRIMnum$(_ERRORLINE); ")"
    REDIM _PRESERVE errors(errorcount) AS errorhandle
    errors(errorcount).err = errornum
    errors(errorcount).line = _ERRORLINE
    errors(errorcount).count = 1
END IF
RESUME NEXT















SUB SearchFreebase_GetSearchResults (o AS LONG)
DIM t AS LONG
DIM tn AS LONG
DIM tr AS LONG
DIM x AS LONG
REDIM freebase_searchresults(1 TO 5, 0) AS STRING
tr = dbTypeFind(o, 0, "result")
FOR x = 1 TO dbTypeCount
    t = dbTypeFind(0, tr, zeroset(x, 4))
    IF t THEN
        REDIM _PRESERVE freebase_searchresults(1 TO 5, x) AS STRING
        freebase_searchresults(1, x) = dbPropertyValue(dbPropertyFind(0, t, "name"))
        freebase_searchresults(2, x) = dbPropertyValue(dbPropertyFind(0, t, "mid"))
        tn = dbTypeFind(0, t, "notable")
        IF tn THEN
            freebase_searchresults(3, x) = dbPropertyValue(dbPropertyFind(0, tn, "name"))
            freebase_searchresults(4, x) = dbPropertyValue(dbPropertyFind(0, tn, "id"))
        END IF
        freebase_searchresults(5, x) = dbPropertyValue(dbPropertyFind(0, t, "score"))
    ELSE
        EXIT FOR
    END IF
NEXT x
END SUB

FUNCTION SearchFreebase$ (query AS STRING, limit AS INTEGER)
DIM f AS LONG
DIM request AS STRING
request = "https://www.googleapis.com/freebase/v1/search"
request = request + "?query=" + URLCASE$(query)
IF limit THEN request = request + "&limit=" + TRIMnum$(limit)
IF apikey$ > "" THEN request = request + "&key=" + apikey$
SHELL _HIDE "wget " + request + " --no-check-certificate --output-document=freebase.tmp"
f = FREEFILE
OPEN "freebase.tmp" FOR INPUT AS #f
LINE INPUT #1, SearchFreebase
CLOSE #f
KILL "freebase.tmp"
END SUB

FUNCTION TopicFreebase$ (id AS STRING)
DIM f AS LONG
DIM readfreebase AS STRING
DIM request AS STRING
request = "https://www.googleapis.com/freebase/v1/topic" + id
IF apikey$ > "" THEN request = request + "?key=" + apikey$
SHELL _HIDE "wget " + request + " --no-check-certificate --output-document=freebase.tmp"
f = FREEFILE
OPEN "freebase.tmp" FOR INPUT AS #f
DO
    LINE INPUT #1, readfreebase
    TopicFreebase = TopicFreebase + TRIM$(readfreebase)
LOOP UNTIL EOF(f)
CLOSE #f
KILL "freebase.tmp"
END SUB







'$INCLUDE:'common.bi'
'$INCLUDE:'database.bi'
'$INCLUDE:'input.bi'